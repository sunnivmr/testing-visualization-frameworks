[{"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/index.js":"1","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/App.js":"2","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/reportWebVitals.js":"3","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/CovidLineChart.js":"4","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/axes/YAxis.js":"5","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/axes/XAxis.js":"6","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/useCountriesData.js":"7","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/LineChart.js":"8","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/useGlobalData.js":"9","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/VoronoiOverlay.js":"10","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/CovidLineChart.js":"11","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/useGlobalData.js":"12","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/LineChart.js":"13","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/useCountriesData.js":"14","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/VoronoiOverlay.js":"15","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/axes/XAxis.js":"16","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/axes/YAxis.js":"17"},{"size":500,"mtime":1608034534236,"results":"18","hashOfConfig":"19"},{"size":2728,"mtime":1612862525174,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1608034534237,"results":"21","hashOfConfig":"19"},{"size":4005,"mtime":1612862525174,"results":"22","hashOfConfig":"19"},{"size":620,"mtime":1612862181784,"results":"23","hashOfConfig":"19"},{"size":562,"mtime":1612862181784,"results":"24","hashOfConfig":"19"},{"size":2581,"mtime":1612862181798,"results":"25","hashOfConfig":"19"},{"size":3984,"mtime":1612862181692,"results":"26","hashOfConfig":"19"},{"size":1649,"mtime":1612862181944,"results":"27","hashOfConfig":"19"},{"size":745,"mtime":1612862181783,"results":"28","hashOfConfig":"19"},{"size":4005,"mtime":1612862313281,"results":"29","hashOfConfig":"19"},{"size":1649,"mtime":1612862313301,"results":"30","hashOfConfig":"19"},{"size":3984,"mtime":1612862313286,"results":"31","hashOfConfig":"19"},{"size":2581,"mtime":1612862313301,"results":"32","hashOfConfig":"19"},{"size":745,"mtime":1612862313295,"results":"33","hashOfConfig":"19"},{"size":562,"mtime":1612862313296,"results":"34","hashOfConfig":"19"},{"size":620,"mtime":1612862313297,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"rvffk5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/index.js",[],["72","73"],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/App.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/reportWebVitals.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/CovidLineChart.js",["74","75","76"],"import React, { useState, useMemo } from \"react\";\nimport { timeFormat, scaleLinear, scaleLog } from \"d3\";\nimport Dropdown from \"react-dropdown\";\nimport Select from \"react-select\";\n\nimport { LineChart } from \"./LineChart\";\nimport { useGlobalData } from \"./useGlobalData\";\nimport { useCountriesData } from \"./useCountriesData\";\n\nimport \"./chart.scss\";\nimport \"react-dropdown/style.css\";\n\n// Using react-dropdown\n// Dataset choices\nconst datasets = [\n  { value: \"deaths\", label: \"Covid deaths\", data: null },\n  { value: \"cases\", label: \"Covid cases\", data: null },\n];\n\n// Set data for dropdown\nconst setData = (value) => {\n  if (value === datasets[0].value) {\n    return datasets[0].data;\n  } else {\n    return datasets[1].data;\n  }\n};\n\n// Scale choices\nconst scales = [\n  { value: \"linear\", label: \"Linear scale\", scale: scaleLinear },\n  { value: \"log\", label: \"Logarithmic scale\", scale: scaleLog },\n];\n\nlet defaultDataset = datasets[0];\nlet defaultScale = scales[0];\n\n// Using react-select\n// Country choices\nconst countries = [\n  { value: \"NOR\", label: \"Norway\" },\n  { value: \"SWE\", label: \"Sweden\" },\n  { value: \"DNM\", label: \"Denmark\" },\n];\n\nconst width = 700;\nconst height = 400;\n\nconst formatNumber = (d) => d.toLocaleString(\"en-US\");\n\nexport const CovidLineChart = () => {\n  const [cases, deaths] = useCountriesData();\n  const [casesGlobal, deathsGlobal] = useGlobalData();\n  const [chosenData, setChosenData] = useState(null);\n\n  const [chosenScale, setChosenScale] = useState(defaultScale);\n  const [chosenDataset, setChosenDataset] = useState(defaultDataset);\n\n  if (!deaths || !cases || !deathsGlobal || !casesGlobal) {\n    return <pre></pre>;\n  }\n\n  // Don't know if this is the best solution\n  if (!chosenData || !chosenScale) {\n    return <p>{setChosenData(deaths)}</p>;\n  }\n\n  // Set default values\n  defaultDataset = chosenData === datasets[1] ? datasets[1] : datasets[0];\n  defaultScale = chosenScale === scales[1] ? scales[1] : scales[0];\n\n  // Sets data to datasets to use it in graph\n  datasets[0].data = deaths;\n  datasets[1].data = cases;\n\n  // Latest date with records\n  const latestDate = timeFormat(\"%m/%d/%y\")(\n    deathsGlobal[deathsGlobal.length - 1].date\n  );\n\n  // Total deaths and cases\n  let totalDeaths = deathsGlobal[deathsGlobal.length - 1].total;\n  let totalCases = casesGlobal[casesGlobal.length - 1].total;\n\n  const info = [\n    { value: latestDate, label: \"Latest date\" },\n    { value: formatNumber(totalDeaths), label: \"Total global deaths\" },\n    { value: formatNumber(totalCases), label: \"Total global cases\" },\n  ];\n\n  // Handle change of data\n  const handleDataChange = (e) => {\n    setChosenDataset(e);\n    setChosenData(setData(e.value));\n    console.log(\"Chosen data: \" + e.value);\n  };\n\n  // Handle change of scale\n  const handleScaleChange = (e) => {\n    setChosenScale(e);\n    console.log(\"Chosen scale: \" + e.value);\n  };\n\n  const Selects = () => {\n    return (\n      <div className=\"dropdowns\">\n        <Select\n          options={datasets}\n          onChange={(e) => handleDataChange(e)}\n          value={chosenDataset}\n        />\n        <Select\n          options={scales}\n          onChange={(e) => handleScaleChange(e)}\n          value={chosenScale}\n        />\n      </div>\n    );\n  };\n\n  const CountrySelect = () => {\n    return (\n      <div className=\"country-select\">\n        <Select\n          options={countries}\n          placeholder=\"Select countries\"\n          isClearable\n          isSearchable\n          isMulti\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"big-chart-section covid-19-countries\">\n      <div className=\"info\">\n        <h4 className=\"section-title\">Coronavirus Line Chart</h4>\n        {info.map((info, i) => (\n          <p key={i}>\n            <strong>{info.label + \":\"}</strong> {info.value}\n          </p>\n        ))}\n        <Selects />\n      </div>\n\n      <LineChart\n        data={chosenData}\n        width={width}\n        height={height}\n        scale={chosenScale.value}\n      />\n    </div>\n  );\n};\n","/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/axes/YAxis.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/axes/XAxis.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/useCountriesData.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/LineChart.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/useGlobalData.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountries/VoronoiOverlay.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/CovidLineChart.js",["77","78","79"],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/useGlobalData.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/LineChart.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/useCountriesData.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/VoronoiOverlay.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/axes/XAxis.js",[],"/Users/sunnivamathearunde/git/testing-visualization-frameworks/d3js/src/learning/CovidChartCountriesStable/axes/YAxis.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":34},{"ruleId":"84","severity":1,"message":"88","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"89","line":121,"column":9,"nodeType":"86","messageId":"87","endLine":121,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":34},{"ruleId":"84","severity":1,"message":"88","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"89","line":121,"column":9,"nodeType":"86","messageId":"87","endLine":121,"endColumn":22},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'CountrySelect' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]